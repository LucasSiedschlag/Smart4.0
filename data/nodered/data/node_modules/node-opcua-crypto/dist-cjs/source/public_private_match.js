"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.certificateMatchesPrivateKey = exports.publicKeyAndPrivateKeyMatches = void 0;
var explore_private_key_js_1 = require("./explore_private_key.js");
var crypto_utils_js_1 = require("./crypto_utils.js");
var crypto_explore_certificate_js_1 = require("./crypto_explore_certificate.js");
function publicKeyAndPrivateKeyMatches(certificate, privateKey) {
    var i = (0, crypto_explore_certificate_js_1.exploreCertificate)(certificate);
    var j = (0, explore_private_key_js_1.explorePrivateKey)(privateKey);
    var modulus1 = i.tbsCertificate.subjectPublicKeyInfo.subjectPublicKey.modulus;
    var modulus2 = j.modulus;
    if (modulus1.length != modulus2.length) {
        return false;
    }
    return modulus1.toString("hex") === modulus2.toString("hex");
}
exports.publicKeyAndPrivateKeyMatches = publicKeyAndPrivateKeyMatches;
function certificateMatchesPrivateKeyPEM(certificate, privateKey, blockSize) {
    var initialBuffer = Buffer.from("Lorem Ipsum");
    var encryptedBuffer = (0, crypto_utils_js_1.publicEncrypt_long)(initialBuffer, certificate, blockSize, 11);
    var decryptedBuffer = (0, crypto_utils_js_1.privateDecrypt_long)(encryptedBuffer, privateKey, blockSize);
    var finalString = decryptedBuffer.toString("utf-8");
    return initialBuffer.toString("utf-8") === finalString;
}
function certificateMatchesPrivateKey(certificate, privateKey) {
    var e = (0, explore_private_key_js_1.explorePrivateKey)(privateKey);
    var blockSize = e.modulus.length;
    var certificatePEM = (0, crypto_utils_js_1.toPem)(certificate, "CERTIFICATE");
    return certificateMatchesPrivateKeyPEM(certificatePEM, privateKey, blockSize);
}
exports.certificateMatchesPrivateKey = certificateMatchesPrivateKey;
//# sourceMappingURL=public_private_match.js.map