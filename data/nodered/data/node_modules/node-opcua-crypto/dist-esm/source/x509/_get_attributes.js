import { CertificatePurpose } from "../common.js";
import { x509 } from "./_crypto.js";
var keyUsageApplication = x509.KeyUsageFlags.keyEncipherment |
    x509.KeyUsageFlags.nonRepudiation |
    x509.KeyUsageFlags.dataEncipherment |
    x509.KeyUsageFlags.keyCertSign |
    x509.KeyUsageFlags.digitalSignature;
var keyUsageCA = x509.KeyUsageFlags.keyCertSign | x509.KeyUsageFlags.cRLSign;
export function getAttributes(purpose) {
    var basicConstraints;
    var keyUsageExtension = [];
    var usages;
    var nsComment;
    var extension;
    switch (purpose) {
        case CertificatePurpose.ForCertificateAuthority:
            extension = "v3_ca";
            basicConstraints = new x509.BasicConstraintsExtension(true, undefined, false);
            usages = keyUsageCA;
            keyUsageExtension = [];
            nsComment = "Self-signed certificate for CA generated by Node-OPCUA Certificate utility V2";
            break;
        case CertificatePurpose.ForApplication:
        case CertificatePurpose.ForUserAuthentication:
        default:
            extension = "v3_selfsigned";
            basicConstraints = new x509.BasicConstraintsExtension(false, undefined, true);
            usages = keyUsageApplication;
            keyUsageExtension = [x509.ExtendedKeyUsage.serverAuth, x509.ExtendedKeyUsage.clientAuth];
            nsComment = "Self-signed certificate generated by Node-OPCUA Certificate utility V2";
            break;
    }
    return { nsComment: nsComment, basicConstraints: basicConstraints, keyUsageExtension: keyUsageExtension, usages: usages };
}
//# sourceMappingURL=_get_attributes.js.map