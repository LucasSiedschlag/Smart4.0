"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readMaxByteStringLength = void 0;
const node_opcua_basic_types_1 = require("node-opcua-basic-types");
const node_opcua_binary_stream_1 = require("node-opcua-binary-stream");
const node_opcua_constants_1 = require("node-opcua-constants");
const node_opcua_nodeid_1 = require("node-opcua-nodeid");
const node_opcua_status_code_1 = require("node-opcua-status-code");
function readMaxByteStringLength(session) {
    return __awaiter(this, void 0, void 0, function* () {
        const dataValue = yield session.read({
            nodeId: (0, node_opcua_nodeid_1.resolveNodeId)(node_opcua_constants_1.VariableIds.Server_ServerCapabilities_MaxByteStringLength),
            attributeId: node_opcua_basic_types_1.AttributeIds.Value
        });
        if (dataValue.statusCode !== node_opcua_status_code_1.StatusCodes.Good) {
            return 1024;
        }
        return dataValue.value.value || node_opcua_binary_stream_1.BinaryStream.maxByteStringLength;
    });
}
exports.readMaxByteStringLength = readMaxByteStringLength;
//# sourceMappingURL=read_max_byte_string_length.js.map